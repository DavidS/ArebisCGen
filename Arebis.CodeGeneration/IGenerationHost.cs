using System;
using System.Collections.Specialized;

namespace Arebis.CodeGeneration
{
    /// <summary>
    /// Represents the host of a GenerationTemplate
    /// </summary>
    public interface IGenerationHost
    {
        /// <summary>
        /// Calls the given template with the given parameters.
        /// Template output is embedded in the output generated by this template.
        /// </summary>
        void CallTemplate(string templatefile, params object[] parameters);

        /// <summary>
        /// Calls the given template with the given parameters.
        /// Template output is embedded in the output generated by this template.
        /// </summary>
        void CallTemplateToFile(string templatefile, string outputfile, params object[] parameters);

        /// <summary>
        /// Settings of the generation.
        /// </summary>
        NameValueCollection Settings { get; }

		/// <summary>
		/// Writes the string to the current output.
		/// </summary>
		void WriteOutput(string str);

		/// <summary>
		/// The string representing a line break.
		/// </summary>
		string NewLineString { get; }

		/// <summary>
		/// Writes to the logfile.
		/// </summary>
		void Log(string fmt, params object[] args);

		/// <summary>
		/// Request the filewriter to write the given file with the given content.
		/// </summary>
		/// <param name="filename">Filename, absolute, or relative towards current running directory.</param>
		/// <param name="content">Full content of the file.</param>
		void WriteFile(string filename, string content);
    }
}
